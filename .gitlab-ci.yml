stages:
  - build
  - docker
  - deploy

variables:
    REGISTRY_PATH: ${CI_REGISTRY}/gaia-x/data-infrastructure-federation-services/por
    IMAGE_NAME: ${CI_PROJECT_NAME}/portal-${CI_PROJECT_NAME}
    TAG: ${CI_PIPELINE_ID}
    CI: "false"
    REACT_APP_EDGE_API_URI: "https://ybgaiax.me"


application-build:
  stage: build
  image:
    name: node:17-alpine3.14
  artifacts:
    paths:
      - /deploy/docker/output/
  only:
    refs:
      - testPipeLineHelm
  script:
    - ls -l
    - rm -rf /deploy/docker/output/*
    - npm install
    - npm run build
    - pwd
    - ls -l
    - mv build deploy/docker/output/


docker-build:
  stage: docker
  dependencies:
    - application-build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  only:
    refs:
      - testPipeLineHelm
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/deploy/docker"
      --dockerfile "${CI_PROJECT_DIR}/deploy/docker/Dockerfile"
      --destination "${REGISTRY_PATH}/${IMAGE_NAME}:${TAG}"


.base_deploy: &base_deploy
  stage: deploy
  only:
    refs:
      - testPipeLineHelm
  image: alpine/k8s:1.21.12
  script:
    - mkdir -p /root/.kube
    - echo "${K8S_CONFIG}"  | base64 -d > /root/.kube/config
    - helm upgrade --install gaia-x-${CI_PROJECT_NAME} deploy/helm/app --values deploy/helm/app/values.yaml -n gaia-x-portal --set image.repository="${REGISTRY_PATH}" --set image.name="${IMAGE_NAME}" --set image.tag=${TAG} --set fullnameOverride=${CI_PROJECT_NAME} --wait


Deploy to Test:
  <<: *base_deploy
  environment:
    name: az-test
  variables:
    K8S_CONFIG: "${AZ_KUBE_CONFIG}"


Deploy to Demo:
  <<: *base_deploy
  environment:
    name: ecodemo
  when: manual
  variables:
    K8S_CONFIG: "${ECO_K8S}"
